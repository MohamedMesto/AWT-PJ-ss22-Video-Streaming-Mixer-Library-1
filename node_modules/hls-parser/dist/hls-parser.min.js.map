{"version":3,"sources":["webpack://HLS/webpack/universalModuleDefinition","webpack://HLS/./index.js","webpack://HLS/./parse.js","webpack://HLS/./stringify.js","webpack://HLS/./types.js","webpack://HLS/./utils.js","webpack://HLS/webpack/bootstrap","webpack://HLS/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","require","getOptions","setOptions","parse","stringify","types","utils","Rendition","Variant","SessionData","Key","MediaInitializationSection","DateRange","SpliceInfo","MasterPlaylist","MediaPlaylist","Segment","PartialSegment","PrefetchSegment","RenditionReport","unquote","str","trim","parseEXTINF","param","pair","splitAt","duration","toNumber","title","decodeURIComponent","escape","parseBYTERANGE","length","offset","parseResolution","width","height","parseAllowedCpc","message","list","split","INVALIDPLAYLIST","allowedCpcList","item","format","cpcText","push","cpcList","parseUserAttribute","startsWith","hexToByteSequence","setCompatibleVersionOfKey","params","attributes","compatibleVersion","parseAttributeList","iv","splitByCommaWithPreservingQuotes","key","value","val","Date","MIXEDTAGS","addRendition","variant","line","type","rendition","uri","groupId","language","assocLanguage","name","isDefault","autoselect","forced","instreamId","characteristics","channels","renditions","camelify","errorMessage","defaultFound","checkRedundantRendition","currentRenditions","parseVariant","lines","variantAttrs","iFrameOnly","bandwidth","averageBandwidth","score","codecs","resolution","frameRate","hdcpLevel","allowedCpc","videoRange","stableVariantId","renditionAttrs","renditionType","closedCaptions","attrs","isClosedCaptionsNone","some","matchTypes","isIFrameOnly","sameKey","key1","key2","method","i","formatVersion","parseSegment","start","end","mediaSequenceNumber","discontinuitySequence","segment","mapHint","partHint","Number","isInteger","Math","round","targetDuration","byterange","parts","discontinuity","hasMap","map","programDateTime","Object","keys","dateRange","id","classId","plannedDuration","endOnNext","markers","DURATION","tagName","hint","partialSegment","independent","gap","parsePrefetchSegment","parseMediaPlaylist","playlist","segmentStart","mediaSequence","discontinuityFound","prefetchFound","currentKey","currentMap","containsParts","entries","index","category","undefined","version","segments","mediaSequenceBase","discontinuitySequenceBase","endlist","playlistType","isIFrame","independentSegments","precise","lowLatencyCompatibility","canBlockReload","canSkipUntil","holdBack","partHoldBack","partTargetDuration","search","renditionReports","lastMSN","lastPart","skip","prefetchSegments","addSegment","earliestDates","Map","rangeList","hasDateRange","hasProgramDateTime","getTime","get","set","range","entry","checkDateRange","segmentIndex","partIndex","report","lastSegment","checkLowLatencyCompatibility","prevSegment","parseTag","indexOf","slice","splitTag","getTagCategory","isMasterPlaylist","CHECKTAGCATEGORY","hash","isNaN","parseTagParam","semanticParse","variantIsScored","variants","URI","sessionData","sessionDataList","sessionKey","sessionKeyList","parseMasterPlaylist","text","l","Buffer","from","toString","tag","lexicalParse","source","ALLOW_REDUNDANCY","SKIP_IF_REDUNDANT","LineArray","baseUri","elems","elem","includes","Array","buildDecimalFloatingNumber","num","fixed","roundFactor","rounded","toFixed","getNumberOfDecimalPlaces","buildSessionData","join","buildKey","isSessionKey","byteSequenceToHex","buildVariant","audio","buildRendition","video","subtitles","allowClosedCaptionsNone","buildSegment","lastKey","lastMap","markerType","buildMap","formatDate","buildDateRange","buildMarkers","buildParts","unescape","encodeURIComponent","buildByteRange","prototype","call","marker","part","PARAMCHECK","ASSERT","buildMasterPlaylist","unclosedCueIn","buildMediaPlaylist","Data","this","Playlist","currentVariant","mimeType","data","CONDITIONALASSERT","CONDITIONALPARAMCHECK","options","THROW","err","strictMode","silent","console","error","radix","parseFloat","parseInt","msg","Error","cond","numArray","sequence","array","toUpperCase","tryCatch","body","errorHandler","delimiter","lastDelimiterPos","j","char","endsWith","doParse","prevQuotes","curr","pop","nextUpper","ch","toLowerCase","date","YYYY","getUTCFullYear","MM","getUTCMonth","DD","getUTCDate","hh","getUTCHours","mm","getUTCMinutes","ss","getUTCSeconds","msc","getUTCMilliseconds","hasOwnProp","obj","propName","hasOwnProperty","newOptions","assign","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"mappings":"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","file":"hls-parser.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"HLS\"] = factory();\n\telse\n\t\troot[\"HLS\"] = factory();\n})(self, function() {\nreturn ","/*! Copyright Kuu Miyazaki. SPDX-License-Identifier: MIT */\nconst {getOptions, setOptions} = require('./utils');\nconst parse = require('./parse');\nconst stringify = require('./stringify');\nconst types = require('./types');\n\nmodule.exports = {\n  parse,\n  stringify,\n  types,\n  getOptions,\n  setOptions\n};\n","const utils = require('./utils');\nconst {\n  Rendition,\n  Variant,\n  SessionData,\n  Key,\n  MediaInitializationSection,\n  DateRange,\n  SpliceInfo,\n  MasterPlaylist,\n  MediaPlaylist,\n  Segment,\n  PartialSegment,\n  PrefetchSegment,\n  RenditionReport\n} = require('./types');\n\nfunction unquote(str) {\n  return utils.trim(str, '\"');\n}\n\nfunction getTagCategory(tagName) {\n  switch (tagName) {\n    case 'EXTM3U':\n    case 'EXT-X-VERSION':\n      return 'Basic';\n    case 'EXTINF':\n    case 'EXT-X-BYTERANGE':\n    case 'EXT-X-DISCONTINUITY':\n    case 'EXT-X-PREFETCH-DISCONTINUITY':\n    case 'EXT-X-KEY':\n    case 'EXT-X-MAP':\n    case 'EXT-X-PROGRAM-DATE-TIME':\n    case 'EXT-X-DATERANGE':\n    case 'EXT-X-CUE-OUT':\n    case 'EXT-X-CUE-IN':\n    case 'EXT-X-CUE-OUT-CONT':\n    case 'EXT-X-CUE':\n    case 'EXT-OATCLS-SCTE35':\n    case 'EXT-X-ASSET':\n    case 'EXT-X-SCTE35':\n    case 'EXT-X-PART':\n    case 'EXT-X-PRELOAD-HINT':\n      return 'Segment';\n    case 'EXT-X-TARGETDURATION':\n    case 'EXT-X-MEDIA-SEQUENCE':\n    case 'EXT-X-DISCONTINUITY-SEQUENCE':\n    case 'EXT-X-ENDLIST':\n    case 'EXT-X-PLAYLIST-TYPE':\n    case 'EXT-X-I-FRAMES-ONLY':\n    case 'EXT-X-SERVER-CONTROL':\n    case 'EXT-X-PART-INF':\n    case 'EXT-X-PREFETCH':\n    case 'EXT-X-RENDITION-REPORT':\n    case 'EXT-X-SKIP':\n      return 'MediaPlaylist';\n    case 'EXT-X-MEDIA':\n    case 'EXT-X-STREAM-INF':\n    case 'EXT-X-I-FRAME-STREAM-INF':\n    case 'EXT-X-SESSION-DATA':\n    case 'EXT-X-SESSION-KEY':\n      return 'MasterPlaylist';\n    case 'EXT-X-INDEPENDENT-SEGMENTS':\n    case 'EXT-X-START':\n      return 'MediaorMasterPlaylist';\n    default:\n      return 'Unknown';\n  }\n}\n\nfunction parseEXTINF(param) {\n  const pair = utils.splitAt(param, ',');\n  return {duration: utils.toNumber(pair[0]), title: decodeURIComponent(escape(pair[1]))};\n}\n\nfunction parseBYTERANGE(param) {\n  const pair = utils.splitAt(param, '@');\n  return {length: utils.toNumber(pair[0]), offset: pair[1] ? utils.toNumber(pair[1]) : -1};\n}\n\nfunction parseResolution(str) {\n  const pair = utils.splitAt(str, 'x');\n  return {width: utils.toNumber(pair[0]), height: utils.toNumber(pair[1])};\n}\n\nfunction parseAllowedCpc(str) {\n  const message = 'ALLOWED-CPC: Each entry must consit of KEYFORMAT and Content Protection Configuration';\n  const list = str.split(',');\n  if (list.length === 0) {\n    utils.INVALIDPLAYLIST(message);\n  }\n  const allowedCpcList = [];\n  for (const item of list) {\n    const [format, cpcText] = utils.splitAt(item, ':');\n    if (!format || !cpcText) {\n      utils.INVALIDPLAYLIST(message);\n      continue;\n    }\n    allowedCpcList.push({format, cpcList: cpcText.split('/')});\n  }\n  return allowedCpcList;\n}\n\nfunction parseIV(str) {\n  const iv = utils.hexToByteSequence(str);\n  if (iv.length !== 16) {\n    utils.INVALIDPLAYLIST('IV must be a 128-bit unsigned integer');\n  }\n  return iv;\n}\n\nfunction parseUserAttribute(str) {\n  if (str.startsWith('\"')) {\n    return unquote(str);\n  }\n  if (str.startsWith('0x') || str.startsWith('0X')) {\n    return utils.hexToByteSequence(str);\n  }\n  return utils.toNumber(str);\n}\n\nfunction setCompatibleVersionOfKey(params, attributes) {\n  if (attributes['IV'] && params.compatibleVersion < 2) {\n    params.compatibleVersion = 2;\n  }\n  if ((attributes['KEYFORMAT'] || attributes['KEYFORMATVERSIONS']) && params.compatibleVersion < 5) {\n    params.compatibleVersion = 5;\n  }\n}\n\nfunction parseAttributeList(param) {\n  const attributes = {};\n  for (const item of utils.splitByCommaWithPreservingQuotes(param)) {\n    const [key, value] = utils.splitAt(item, '=');\n    const val = unquote(value);\n    switch (key) {\n      case 'URI':\n        attributes[key] = val;\n        break;\n      case 'START-DATE':\n      case 'END-DATE':\n        attributes[key] = new Date(val);\n        break;\n      case 'IV':\n        attributes[key] = parseIV(val);\n        break;\n      case 'BYTERANGE':\n        attributes[key] = parseBYTERANGE(val);\n        break;\n      case 'RESOLUTION':\n        attributes[key] = parseResolution(val);\n        break;\n      case 'ALLOWED-CPC':\n        attributes[key] = parseAllowedCpc(val);\n        break;\n      case 'END-ON-NEXT':\n      case 'DEFAULT':\n      case 'AUTOSELECT':\n      case 'FORCED':\n      case 'PRECISE':\n      case 'CAN-BLOCK-RELOAD':\n      case 'INDEPENDENT':\n      case 'GAP':\n        attributes[key] = val === 'YES';\n        break;\n      case 'DURATION':\n      case 'PLANNED-DURATION':\n      case 'BANDWIDTH':\n      case 'AVERAGE-BANDWIDTH':\n      case 'FRAME-RATE':\n      case 'TIME-OFFSET':\n      case 'CAN-SKIP-UNTIL':\n      case 'HOLD-BACK':\n      case 'PART-HOLD-BACK':\n      case 'PART-TARGET':\n      case 'BYTERANGE-START':\n      case 'BYTERANGE-LENGTH':\n      case 'LAST-MSN':\n      case 'LAST-PART':\n      case 'SKIPPED-SEGMENTS':\n      case 'SCORE':\n        attributes[key] = utils.toNumber(val);\n        break;\n      default:\n        if (key.startsWith('SCTE35-')) {\n          attributes[key] = utils.hexToByteSequence(val);\n        } else if (key.startsWith('X-')) {\n          attributes[key] = parseUserAttribute(value);\n        } else {\n          if (key === 'VIDEO-RANGE' && val !== 'SDR' && val !== 'HLG' && val !== 'PQ') {\n            utils.INVALIDPLAYLIST(`VIDEO-RANGE: unknown value \"${val}\"`);\n          }\n          attributes[key] = val;\n        }\n    }\n  }\n  return attributes;\n}\n\nfunction parseTagParam(name, param) {\n  switch (name) {\n    case 'EXTM3U':\n    case 'EXT-X-DISCONTINUITY':\n    case 'EXT-X-ENDLIST':\n    case 'EXT-X-I-FRAMES-ONLY':\n    case 'EXT-X-INDEPENDENT-SEGMENTS':\n    case 'EXT-X-CUE-IN':\n      return [null, null];\n    case 'EXT-X-VERSION':\n    case 'EXT-X-TARGETDURATION':\n    case 'EXT-X-MEDIA-SEQUENCE':\n    case 'EXT-X-DISCONTINUITY-SEQUENCE':\n      return [utils.toNumber(param), null];\n    case 'EXT-X-CUE-OUT':\n      // For backwards compatibility: attributes list is optional,\n      // if only a number is found, use it as the duration\n      if (!Number.isNaN(Number(param))) {\n        return [utils.toNumber(param), null];\n      }\n      // If attributes are found, parse them out (i.e. DURATION)\n      return [null, parseAttributeList(param)];\n    case 'EXT-X-KEY':\n    case 'EXT-X-MAP':\n    case 'EXT-X-DATERANGE':\n    case 'EXT-X-MEDIA':\n    case 'EXT-X-STREAM-INF':\n    case 'EXT-X-I-FRAME-STREAM-INF':\n    case 'EXT-X-SESSION-DATA':\n    case 'EXT-X-SESSION-KEY':\n    case 'EXT-X-START':\n    case 'EXT-X-SERVER-CONTROL':\n    case 'EXT-X-PART-INF':\n    case 'EXT-X-PART':\n    case 'EXT-X-PRELOAD-HINT':\n    case 'EXT-X-RENDITION-REPORT':\n    case 'EXT-X-SKIP':\n      return [null, parseAttributeList(param)];\n    case 'EXTINF':\n      return [parseEXTINF(param), null];\n    case 'EXT-X-BYTERANGE':\n      return [parseBYTERANGE(param), null];\n    case 'EXT-X-PROGRAM-DATE-TIME':\n      return [new Date(param), null];\n    case 'EXT-X-PLAYLIST-TYPE':\n      return [param, null]; // <EVENT|VOD>\n    default:\n      return [param, null]; // Unknown tag\n  }\n}\n\nfunction MIXEDTAGS() {\n  utils.INVALIDPLAYLIST(`The file contains both media and master playlist tags.`);\n}\n\nfunction splitTag(line) {\n  const index = line.indexOf(':');\n  if (index === -1) {\n    return [line.slice(1).trim(), null];\n  }\n  return [line.slice(1, index).trim(), line.slice(index + 1).trim()];\n}\n\nfunction parseRendition({attributes}) {\n  const rendition = new Rendition({\n    type: attributes['TYPE'],\n    uri: attributes['URI'],\n    groupId: attributes['GROUP-ID'],\n    language: attributes['LANGUAGE'],\n    assocLanguage: attributes['ASSOC-LANGUAGE'],\n    name: attributes['NAME'],\n    isDefault: attributes['DEFAULT'],\n    autoselect: attributes['AUTOSELECT'],\n    forced: attributes['FORCED'],\n    instreamId: attributes['INSTREAM-ID'],\n    characteristics: attributes['CHARACTERISTICS'],\n    channels: attributes['CHANNELS']\n  });\n  return rendition;\n}\n\nfunction checkRedundantRendition(renditions, rendition) {\n  let defaultFound = false;\n  for (const item of renditions) {\n    if (item.name === rendition.name) {\n      return 'All EXT-X-MEDIA tags in the same Group MUST have different NAME attributes.';\n    }\n    if (item.isDefault) {\n      defaultFound = true;\n    }\n  }\n  if (defaultFound && rendition.isDefault) {\n    return 'EXT-X-MEDIA A Group MUST NOT have more than one member with a DEFAULT attribute of YES.';\n  }\n  return '';\n}\n\nfunction addRendition(variant, line, type) {\n  const rendition = parseRendition(line);\n  const renditions = variant[utils.camelify(type)];\n  const errorMessage = checkRedundantRendition(renditions, rendition);\n  if (errorMessage) {\n    utils.INVALIDPLAYLIST(errorMessage);\n  }\n  renditions.push(rendition);\n  if (rendition.isDefault) {\n    variant.currentRenditions[utils.camelify(type)] = renditions.length - 1;\n  }\n}\n\nfunction matchTypes(attrs, variant, params) {\n  for (const type of ['AUDIO', 'VIDEO', 'SUBTITLES', 'CLOSED-CAPTIONS']) {\n    if (type === 'CLOSED-CAPTIONS' && attrs[type] === 'NONE') {\n      params.isClosedCaptionsNone = true;\n      variant.closedCaptions = [];\n    } else if (attrs[type] && !variant[utils.camelify(type)].some(item => item.groupId === attrs[type])) {\n      utils.INVALIDPLAYLIST(`${type} attribute MUST match the value of the GROUP-ID attribute of an EXT-X-MEDIA tag whose TYPE attribute is ${type}.`);\n    }\n  }\n}\n\nfunction parseVariant(lines, variantAttrs, uri, iFrameOnly, params) {\n  const variant = new Variant({\n    uri,\n    bandwidth: variantAttrs['BANDWIDTH'],\n    averageBandwidth: variantAttrs['AVERAGE-BANDWIDTH'],\n    score: variantAttrs['SCORE'],\n    codecs: variantAttrs['CODECS'],\n    resolution: variantAttrs['RESOLUTION'],\n    frameRate: variantAttrs['FRAME-RATE'],\n    hdcpLevel: variantAttrs['HDCP-LEVEL'],\n    allowedCpc: variantAttrs['ALLOWED-CPC'],\n    videoRange: variantAttrs['VIDEO-RANGE'],\n    stableVariantId: variantAttrs['STABLE-VARIANT-ID']\n  });\n  for (const line of lines) {\n    if (line.name === 'EXT-X-MEDIA') {\n      const renditionAttrs = line.attributes;\n      const renditionType = renditionAttrs['TYPE'];\n      if (!renditionType || !renditionAttrs['GROUP-ID']) {\n        utils.INVALIDPLAYLIST('EXT-X-MEDIA TYPE attribute is REQUIRED.');\n      }\n      if (variantAttrs[renditionType] === renditionAttrs['GROUP-ID']) {\n        addRendition(variant, line, renditionType);\n        if (renditionType === 'CLOSED-CAPTIONS') {\n          for (const {instreamId} of variant.closedCaptions) {\n            if (instreamId && instreamId.startsWith('SERVICE') && params.compatibleVersion < 7) {\n              params.compatibleVersion = 7;\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n  matchTypes(variantAttrs, variant, params);\n  variant.isIFrameOnly = iFrameOnly;\n  return variant;\n}\n\nfunction sameKey(key1, key2) {\n  if (key1.method !== key2.method) {\n    return false;\n  }\n  if (key1.uri !== key2.uri) {\n    return false;\n  }\n  if (key1.iv) {\n    if (!key2.iv) {\n      return false;\n    }\n    if (key1.iv.length !== key2.iv.length) {\n      return false;\n    }\n    for (let i = 0; i < key1.iv.length; i++) {\n      if (key1.iv[i] !== key2.iv[i]) {\n        return false;\n      }\n    }\n  } else if (key2.iv) {\n    return false;\n  }\n  if (key1.format !== key2.format) {\n    return false;\n  }\n  if (key1.formatVersion !== key2.formatVersion) {\n    return false;\n  }\n  return true;\n}\n\nfunction parseMasterPlaylist(lines, params) {\n  const playlist = new MasterPlaylist();\n  let variantIsScored = false;\n  for (const [index, {name, value, attributes}] of lines.entries()) {\n    if (name === 'EXT-X-VERSION') {\n      playlist.version = value;\n    } else if (name === 'EXT-X-STREAM-INF') {\n      const uri = lines[index + 1];\n      if (typeof uri !== 'string' || uri.startsWith('#EXT')) {\n        utils.INVALIDPLAYLIST('EXT-X-STREAM-INF must be followed by a URI line');\n      }\n      const variant = parseVariant(lines, attributes, uri, false, params);\n      if (variant) {\n        if (typeof variant.score === 'number') {\n          variantIsScored = true;\n          if (variant.score < 0) {\n            utils.INVALIDPLAYLIST('SCORE attribute on EXT-X-STREAM-INF must be positive decimal-floating-point number.');\n          }\n        }\n        playlist.variants.push(variant);\n      }\n    } else if (name === 'EXT-X-I-FRAME-STREAM-INF') {\n      const variant = parseVariant(lines, attributes, attributes.URI, true, params);\n      if (variant) {\n        playlist.variants.push(variant);\n      }\n    } else if (name === 'EXT-X-SESSION-DATA') {\n      const sessionData = new SessionData({\n        id: attributes['DATA-ID'],\n        value: attributes['VALUE'],\n        uri: attributes['URI'],\n        language: attributes['LANGUAGE']\n      });\n      if (playlist.sessionDataList.some(item => item.id === sessionData.id && item.language === sessionData.language)) {\n        utils.INVALIDPLAYLIST('A Playlist MUST NOT contain more than one EXT-X-SESSION-DATA tag with the same DATA-ID attribute and the same LANGUAGE attribute.');\n      }\n      playlist.sessionDataList.push(sessionData);\n    } else if (name === 'EXT-X-SESSION-KEY') {\n      if (attributes['METHOD'] === 'NONE') {\n        utils.INVALIDPLAYLIST('EXT-X-SESSION-KEY: The value of the METHOD attribute MUST NOT be NONE');\n      }\n      const sessionKey = new Key({\n        method: attributes['METHOD'],\n        uri: attributes['URI'],\n        iv: attributes['IV'],\n        format: attributes['KEYFORMAT'],\n        formatVersion: attributes['KEYFORMATVERSIONS']\n      });\n      if (playlist.sessionKeyList.some(item => sameKey(item, sessionKey))) {\n        utils.INVALIDPLAYLIST('A Master Playlist MUST NOT contain more than one EXT-X-SESSION-KEY tag with the same METHOD, URI, IV, KEYFORMAT, and KEYFORMATVERSIONS attribute values.');\n      }\n      setCompatibleVersionOfKey(params, attributes);\n      playlist.sessionKeyList.push(sessionKey);\n    } else if (name === 'EXT-X-INDEPENDENT-SEGMENTS') {\n      if (playlist.independentSegments) {\n        utils.INVALIDPLAYLIST('EXT-X-INDEPENDENT-SEGMENTS tag MUST NOT appear more than once in a Playlist');\n      }\n      playlist.independentSegments = true;\n    } else if (name === 'EXT-X-START') {\n      if (playlist.start) {\n        utils.INVALIDPLAYLIST('EXT-X-START tag MUST NOT appear more than once in a Playlist');\n      }\n      if (typeof attributes['TIME-OFFSET'] !== 'number') {\n        utils.INVALIDPLAYLIST('EXT-X-START: TIME-OFFSET attribute is REQUIRED');\n      }\n      playlist.start = {offset: attributes['TIME-OFFSET'], precise: attributes['PRECISE'] || false};\n    }\n  }\n  if (variantIsScored) {\n    for (const variant of playlist.variants) {\n      if (typeof variant.score !== 'number') {\n        utils.INVALIDPLAYLIST('If any Variant Stream contains the SCORE attribute, then all Variant Streams in the Master Playlist SHOULD have a SCORE attribute');\n      }\n    }\n  }\n  if (params.isClosedCaptionsNone) {\n    for (const variant of playlist.variants) {\n      if (variant.closedCaptions.length > 0) {\n        utils.INVALIDPLAYLIST('If there is a variant with CLOSED-CAPTIONS attribute of NONE, all EXT-X-STREAM-INF tags MUST have this attribute with a value of NONE');\n      }\n    }\n  }\n  return playlist;\n}\n\nfunction parseSegment(lines, uri, start, end, mediaSequenceNumber, discontinuitySequence, params) {\n  const segment = new Segment({uri, mediaSequenceNumber, discontinuitySequence});\n  let mapHint = false;\n  let partHint = false;\n  for (let i = start; i <= end; i++) {\n    const {name, value, attributes} = lines[i];\n    if (name === 'EXTINF') {\n      if (!Number.isInteger(value.duration) && params.compatibleVersion < 3) {\n        params.compatibleVersion = 3;\n      }\n      if (Math.round(value.duration) > params.targetDuration) {\n        utils.INVALIDPLAYLIST('EXTINF duration, when rounded to the nearest integer, MUST be less than or equal to the target duration');\n      }\n      segment.duration = value.duration;\n      segment.title = value.title;\n    } else if (name === 'EXT-X-BYTERANGE') {\n      if (params.compatibleVersion < 4) {\n        params.compatibleVersion = 4;\n      }\n      segment.byterange = value;\n    } else if (name === 'EXT-X-DISCONTINUITY') {\n      if (segment.parts.length > 0) {\n        utils.INVALIDPLAYLIST('EXT-X-DISCONTINUITY must appear before the first EXT-X-PART tag of the Parent Segment.');\n      }\n      segment.discontinuity = true;\n    } else if (name === 'EXT-X-KEY') {\n      if (segment.parts.length > 0) {\n        utils.INVALIDPLAYLIST('EXT-X-KEY must appear before the first EXT-X-PART tag of the Parent Segment.');\n      }\n      setCompatibleVersionOfKey(params, attributes);\n      segment.key = new Key({\n        method: attributes['METHOD'],\n        uri: attributes['URI'],\n        iv: attributes['IV'],\n        format: attributes['KEYFORMAT'],\n        formatVersion: attributes['KEYFORMATVERSIONS']\n      });\n    } else if (name === 'EXT-X-MAP') {\n      if (segment.parts.length > 0) {\n        utils.INVALIDPLAYLIST('EXT-X-MAP must appear before the first EXT-X-PART tag of the Parent Segment.');\n      }\n      if (params.compatibleVersion < 5) {\n        params.compatibleVersion = 5;\n      }\n      params.hasMap = true;\n      segment.map = new MediaInitializationSection({\n        uri: attributes['URI'],\n        byterange: attributes['BYTERANGE']\n      });\n    } else if (name === 'EXT-X-PROGRAM-DATE-TIME') {\n      segment.programDateTime = value;\n    } else if (name === 'EXT-X-DATERANGE') {\n      const attrs = {};\n      for (const key of Object.keys(attributes)) {\n        if (key.startsWith('SCTE35-') || key.startsWith('X-')) {\n          attrs[key] = attributes[key];\n        }\n      }\n      segment.dateRange = new DateRange({\n        id: attributes['ID'],\n        classId: attributes['CLASS'],\n        start: attributes['START-DATE'],\n        end: attributes['END-DATE'],\n        duration: attributes['DURATION'],\n        plannedDuration: attributes['PLANNED-DURATION'],\n        endOnNext: attributes['END-ON-NEXT'],\n        attributes: attrs\n      });\n    } else if (name === 'EXT-X-CUE-OUT') {\n      segment.markers.push(new SpliceInfo({\n        type: 'OUT',\n        duration: (attributes && attributes.DURATION) || value\n      }));\n    } else if (name === 'EXT-X-CUE-IN') {\n      segment.markers.push(new SpliceInfo({\n        type: 'IN'\n      }));\n    } else if (\n      name === 'EXT-X-CUE-OUT-CONT' ||\n      name === 'EXT-X-CUE' ||\n      name === 'EXT-OATCLS-SCTE35' ||\n      name === 'EXT-X-ASSET' ||\n      name === 'EXT-X-SCTE35'\n    ) {\n      segment.markers.push(new SpliceInfo({\n        type: 'RAW',\n        tagName: name,\n        value\n      }));\n    } else if (name === 'EXT-X-PRELOAD-HINT' && !attributes['TYPE']) {\n      utils.INVALIDPLAYLIST('EXT-X-PRELOAD-HINT: TYPE attribute is mandatory');\n    } else if (name === 'EXT-X-PRELOAD-HINT' && attributes['TYPE'] === 'PART' && partHint) {\n      utils.INVALIDPLAYLIST('Servers should not add more than one EXT-X-PRELOAD-HINT tag with the same TYPE attribute to a Playlist.');\n    } else if ((name === 'EXT-X-PART' || name === 'EXT-X-PRELOAD-HINT') && !attributes['URI']) {\n      utils.INVALIDPLAYLIST('EXT-X-PART / EXT-X-PRELOAD-HINT: URI attribute is mandatory');\n    } else if (name === 'EXT-X-PRELOAD-HINT' && attributes['TYPE'] === 'MAP') {\n      if (mapHint) {\n        utils.INVALIDPLAYLIST('Servers should not add more than one EXT-X-PRELOAD-HINT tag with the same TYPE attribute to a Playlist.');\n      }\n      mapHint = true;\n      params.hasMap = true;\n      segment.map = new MediaInitializationSection({\n        hint: true,\n        uri: attributes['URI'],\n        byterange: {length: attributes['BYTERANGE-LENGTH'], offset: attributes['BYTERANGE-START'] || 0}\n      });\n    } else if (name === 'EXT-X-PART' || (name === 'EXT-X-PRELOAD-HINT' && attributes['TYPE'] === 'PART')) {\n      if (name === 'EXT-X-PART' && !attributes['DURATION']) {\n        utils.INVALIDPLAYLIST('EXT-X-PART: DURATION attribute is mandatory');\n      }\n      if (name === 'EXT-X-PRELOAD-HINT') {\n        partHint = true;\n      }\n      const partialSegment = new PartialSegment({\n        hint: (name === 'EXT-X-PRELOAD-HINT'),\n        uri: attributes['URI'],\n        byterange: (name === 'EXT-X-PART' ? attributes['BYTERANGE'] : {length: attributes['BYTERANGE-LENGTH'], offset: attributes['BYTERANGE-START'] || 0}),\n        duration: attributes['DURATION'],\n        independent: attributes['INDEPENDENT'],\n        gap: attributes['GAP']\n      });\n      segment.parts.push(partialSegment);\n    }\n  }\n  return segment;\n}\n\nfunction parsePrefetchSegment(lines, uri, start, end, mediaSequenceNumber, discontinuitySequence, params) {\n  const segment = new PrefetchSegment({uri, mediaSequenceNumber, discontinuitySequence});\n  for (let i = start; i <= end; i++) {\n    const {name, attributes} = lines[i];\n    if (name === 'EXTINF') {\n      utils.INVALIDPLAYLIST('A prefetch segment must not be advertised with an EXTINF tag.');\n    } else if (name === 'EXT-X-DISCONTINUITY') {\n      utils.INVALIDPLAYLIST('A prefetch segment must not be advertised with an EXT-X-DISCONTINUITY tag.');\n    } else if (name === 'EXT-X-PREFETCH-DISCONTINUITY') {\n      segment.discontinuity = true;\n    } else if (name === 'EXT-X-KEY') {\n      setCompatibleVersionOfKey(params, attributes);\n      segment.key = new Key({\n        method: attributes['METHOD'],\n        uri: attributes['URI'],\n        iv: attributes['IV'],\n        format: attributes['KEYFORMAT'],\n        formatVersion: attributes['KEYFORMATVERSIONS']\n      });\n    } else if (name === 'EXT-X-MAP') {\n      utils.INVALIDPLAYLIST('Prefetch segments must not be advertised with an EXT-X-MAP tag.');\n    }\n  }\n  return segment;\n}\n\nfunction parseMediaPlaylist(lines, params) {\n  const playlist = new MediaPlaylist();\n  let segmentStart = -1;\n  let mediaSequence = 0;\n  let discontinuityFound = false;\n  let prefetchFound = false;\n  let discontinuitySequence = 0;\n  let currentKey = null;\n  let currentMap = null;\n  let containsParts = false;\n  for (const [index, line] of lines.entries()) {\n    const {name, value, attributes, category} = line;\n    if (category === 'Segment') {\n      if (segmentStart === -1) {\n        segmentStart = index;\n      }\n      if (name === 'EXT-X-DISCONTINUITY') {\n        discontinuityFound = true;\n      }\n      continue;\n    }\n    if (name === 'EXT-X-VERSION') {\n      if (playlist.version === undefined) {\n        playlist.version = value;\n      } else {\n        utils.INVALIDPLAYLIST('A Playlist file MUST NOT contain more than one EXT-X-VERSION tag.');\n      }\n    } else if (name === 'EXT-X-TARGETDURATION') {\n      playlist.targetDuration = params.targetDuration = value;\n    } else if (name === 'EXT-X-MEDIA-SEQUENCE') {\n      if (playlist.segments.length > 0) {\n        utils.INVALIDPLAYLIST('The EXT-X-MEDIA-SEQUENCE tag MUST appear before the first Media Segment in the Playlist.');\n      }\n      playlist.mediaSequenceBase = mediaSequence = value;\n    } else if (name === 'EXT-X-DISCONTINUITY-SEQUENCE') {\n      if (playlist.segments.length > 0) {\n        utils.INVALIDPLAYLIST('The EXT-X-DISCONTINUITY-SEQUENCE tag MUST appear before the first Media Segment in the Playlist.');\n      }\n      if (discontinuityFound) {\n        utils.INVALIDPLAYLIST('The EXT-X-DISCONTINUITY-SEQUENCE tag MUST appear before any EXT-X-DISCONTINUITY tag.');\n      }\n      playlist.discontinuitySequenceBase = discontinuitySequence = value;\n    } else if (name === 'EXT-X-ENDLIST') {\n      playlist.endlist = true;\n    } else if (name === 'EXT-X-PLAYLIST-TYPE') {\n      playlist.playlistType = value;\n    } else if (name === 'EXT-X-I-FRAMES-ONLY') {\n      if (params.compatibleVersion < 4) {\n        params.compatibleVersion = 4;\n      }\n      playlist.isIFrame = true;\n    } else if (name === 'EXT-X-INDEPENDENT-SEGMENTS') {\n      if (playlist.independentSegments) {\n        utils.INVALIDPLAYLIST('EXT-X-INDEPENDENT-SEGMENTS tag MUST NOT appear more than once in a Playlist');\n      }\n      playlist.independentSegments = true;\n    } else if (name === 'EXT-X-START') {\n      if (playlist.start) {\n        utils.INVALIDPLAYLIST('EXT-X-START tag MUST NOT appear more than once in a Playlist');\n      }\n      if (typeof attributes['TIME-OFFSET'] !== 'number') {\n        utils.INVALIDPLAYLIST('EXT-X-START: TIME-OFFSET attribute is REQUIRED');\n      }\n      playlist.start = {offset: attributes['TIME-OFFSET'], precise: attributes['PRECISE'] || false};\n    } else if (name === 'EXT-X-SERVER-CONTROL') {\n      if (!attributes['CAN-BLOCK-RELOAD']) {\n        utils.INVALIDPLAYLIST('EXT-X-SERVER-CONTROL: CAN-BLOCK-RELOAD=YES is mandatory for Low-Latency HLS');\n      }\n      playlist.lowLatencyCompatibility = {\n        canBlockReload: attributes['CAN-BLOCK-RELOAD'],\n        canSkipUntil: attributes['CAN-SKIP-UNTIL'],\n        holdBack: attributes['HOLD-BACK'],\n        partHoldBack: attributes['PART-HOLD-BACK']\n      };\n    } else if (name === 'EXT-X-PART-INF') {\n      if (!attributes['PART-TARGET']) {\n        utils.INVALIDPLAYLIST('EXT-X-PART-INF: PART-TARGET attribute is mandatory');\n      }\n      playlist.partTargetDuration = attributes['PART-TARGET'];\n    } else if (name === 'EXT-X-RENDITION-REPORT') {\n      if (!attributes['URI']) {\n        utils.INVALIDPLAYLIST('EXT-X-RENDITION-REPORT: URI attribute is mandatory');\n      }\n      if (attributes['URI'].search(/^[a-z]+:/) === 0) {\n        utils.INVALIDPLAYLIST('EXT-X-RENDITION-REPORT: URI must be relative to the playlist uri');\n      }\n      playlist.renditionReports.push(new RenditionReport({\n        uri: attributes['URI'],\n        lastMSN: attributes['LAST-MSN'],\n        lastPart: attributes['LAST-PART']\n      }));\n    } else if (name === 'EXT-X-SKIP') {\n      if (!attributes['SKIPPED-SEGMENTS']) {\n        utils.INVALIDPLAYLIST('EXT-X-SKIP: SKIPPED-SEGMENTS attribute is mandatory');\n      }\n      if (params.compatibleVersion < 9) {\n        params.compatibleVersion = 9;\n      }\n      playlist.skip = attributes['SKIPPED-SEGMENTS'];\n      mediaSequence += playlist.skip;\n    } else if (name === 'EXT-X-PREFETCH') {\n      const segment = parsePrefetchSegment(lines, value, segmentStart === -1 ? index : segmentStart, index - 1, mediaSequence++, discontinuitySequence, params);\n      if (segment) {\n        if (segment.discontinuity) {\n          segment.discontinuitySequence++;\n          discontinuitySequence = segment.discontinuitySequence;\n        }\n        if (segment.key) {\n          currentKey = segment.key;\n        } else {\n          segment.key = currentKey;\n        }\n        playlist.prefetchSegments.push(segment);\n      }\n      prefetchFound = true;\n      segmentStart = -1;\n    } else if (typeof line === 'string') {\n      // uri\n      if (segmentStart === -1) {\n        utils.INVALIDPLAYLIST('A URI line is not preceded by any segment tags');\n      }\n      if (!playlist.targetDuration) {\n        utils.INVALIDPLAYLIST('The EXT-X-TARGETDURATION tag is REQUIRED');\n      }\n      if (prefetchFound) {\n        utils.INVALIDPLAYLIST('These segments must appear after all complete segments.');\n      }\n      const segment = parseSegment(lines, line, segmentStart, index - 1, mediaSequence++, discontinuitySequence, params);\n      if (segment) {\n        [discontinuitySequence, currentKey, currentMap] = addSegment(playlist, segment, discontinuitySequence, currentKey, currentMap);\n        if (!containsParts && segment.parts.length > 0) {\n          containsParts = true;\n        }\n      }\n      segmentStart = -1;\n    }\n  }\n  if (segmentStart !== -1) {\n    const segment = parseSegment(lines, '', segmentStart, lines.length - 1, mediaSequence++, discontinuitySequence, params);\n    if (segment) {\n      const {parts} = segment;\n      if (parts.length > 0 && !playlist.endlist && !parts[parts.length - 1].hint) {\n        utils.INVALIDPLAYLIST('If the Playlist contains EXT-X-PART tags and does not contain an EXT-X-ENDLIST tag, the Playlist must contain an EXT-X-PRELOAD-HINT tag with a TYPE=PART attribute');\n      }\n      addSegment(playlist, segment, currentKey, currentMap);\n      if (!containsParts && segment.parts.length > 0) {\n        containsParts = true;\n      }\n    }\n  }\n  checkDateRange(playlist.segments);\n  if (playlist.lowLatencyCompatibility) {\n    checkLowLatencyCompatibility(playlist, containsParts);\n  }\n  return playlist;\n}\n\nfunction addSegment(playlist, segment, discontinuitySequence, currentKey, currentMap) {\n  const {discontinuity, key, map, byterange, uri} = segment;\n  if (discontinuity) {\n    segment.discontinuitySequence = discontinuitySequence + 1;\n  }\n  if (!key) {\n    segment.key = currentKey;\n  }\n  if (!map) {\n    segment.map = currentMap;\n  }\n  if (byterange && byterange.offset === -1) {\n    const {segments} = playlist;\n    if (segments.length > 0) {\n      const prevSegment = segments[segments.length - 1];\n      if (prevSegment.byterange && prevSegment.uri === uri) {\n        byterange.offset = prevSegment.byterange.offset + prevSegment.byterange.length;\n      } else {\n        utils.INVALIDPLAYLIST('If offset of EXT-X-BYTERANGE is not present, a previous Media Segment MUST be a sub-range of the same media resource');\n      }\n    } else {\n      utils.INVALIDPLAYLIST('If offset of EXT-X-BYTERANGE is not present, a previous Media Segment MUST appear in the Playlist file');\n    }\n  }\n  playlist.segments.push(segment);\n  return [segment.discontinuitySequence, segment.key, segment.map];\n}\n\nfunction checkDateRange(segments) {\n  const earliestDates = new Map();\n  const rangeList = new Map();\n  let hasDateRange = false;\n  let hasProgramDateTime = false;\n  for (let i = segments.length - 1; i >= 0; i--) {\n    const {programDateTime, dateRange} = segments[i];\n    if (programDateTime) {\n      hasProgramDateTime = true;\n    }\n    if (dateRange && dateRange.start) {\n      hasDateRange = true;\n      if (dateRange.endOnNext && (dateRange.end || dateRange.duration)) {\n        utils.INVALIDPLAYLIST('An EXT-X-DATERANGE tag with an END-ON-NEXT=YES attribute MUST NOT contain DURATION or END-DATE attributes.');\n      }\n      const start = dateRange.start.getTime();\n      const duration = dateRange.duration || 0;\n      if (dateRange.end && dateRange.duration) {\n        if ((start + duration * 1000) !== dateRange.end.getTime()) {\n          utils.INVALIDPLAYLIST('END-DATE MUST be equal to the value of the START-DATE attribute plus the value of the DURATION');\n        }\n      }\n      if (dateRange.endOnNext) {\n        dateRange.end = earliestDates.get(dateRange.classId);\n      }\n      earliestDates.set(dateRange.classId, dateRange.start);\n      const end = dateRange.end ? dateRange.end.getTime() : dateRange.start.getTime() + (dateRange.duration || 0) * 1000;\n      const range = rangeList.get(dateRange.classId);\n      if (range) {\n        for (const entry of range) {\n          if ((entry.start <= start && entry.end > start) || (entry.start >= start && entry.start < end)) {\n            utils.INVALIDPLAYLIST('DATERANGE tags with the same CLASS should not overlap');\n          }\n        }\n        range.push({start, end});\n      } else {\n        rangeList.set(dateRange.classId, [{start, end}]);\n      }\n    }\n  }\n  if (hasDateRange && !hasProgramDateTime) {\n    utils.INVALIDPLAYLIST('If a Playlist contains an EXT-X-DATERANGE tag, it MUST also contain at least one EXT-X-PROGRAM-DATE-TIME tag.');\n  }\n}\n\nfunction checkLowLatencyCompatibility({lowLatencyCompatibility, targetDuration, partTargetDuration, segments, renditionReports}, containsParts) {\n  const {canSkipUntil, holdBack, partHoldBack} = lowLatencyCompatibility;\n  if (canSkipUntil < targetDuration * 6) {\n    utils.INVALIDPLAYLIST('The Skip Boundary must be at least six times the EXT-X-TARGETDURATION.');\n  }\n  // Its value is a floating-point number of seconds and .\n  if (holdBack < targetDuration * 3) {\n    utils.INVALIDPLAYLIST('HOLD-BACK must be at least three times the EXT-X-TARGETDURATION.');\n  }\n  if (containsParts) {\n    if (partTargetDuration === undefined) {\n      utils.INVALIDPLAYLIST('EXT-X-PART-INF is required if a Playlist contains one or more EXT-X-PART tags');\n    }\n    if (partHoldBack === undefined) {\n      utils.INVALIDPLAYLIST('EXT-X-PART: PART-HOLD-BACK attribute is mandatory');\n    }\n    if (partHoldBack < partTargetDuration) {\n      utils.INVALIDPLAYLIST('PART-HOLD-BACK must be at least PART-TARGET');\n    }\n    for (const [segmentIndex, {parts}] of segments.entries()) {\n      if (parts.length > 0 && segmentIndex < segments.length - 3) {\n        utils.INVALIDPLAYLIST('Remove EXT-X-PART tags from the Playlist after they are greater than three target durations from the end of the Playlist.');\n      }\n      for (const [partIndex, {duration}] of parts.entries()) {\n        if (duration === undefined) {\n          continue;\n        }\n        if (duration > partTargetDuration) {\n          utils.INVALIDPLAYLIST('PART-TARGET is the maximum duration of any Partial Segment');\n        }\n        if (partIndex < parts.length - 1 && duration < partTargetDuration * 0.85) {\n          utils.INVALIDPLAYLIST('All Partial Segments except the last part of a segment must have a duration of at least 85% of PART-TARGET');\n        }\n      }\n    }\n  }\n  for (const report of renditionReports) {\n    const lastSegment = segments[segments.length - 1];\n    if (!report.lastMSN) {\n      report.lastMSN = lastSegment.mediaSequenceNumber;\n    }\n    if (!report.lastPart && lastSegment.parts.length > 0) {\n      report.lastPart = lastSegment.parts.length - 1;\n    }\n  }\n}\n\nfunction CHECKTAGCATEGORY(category, params) {\n  if (category === 'Segment' || category === 'MediaPlaylist') {\n    if (params.isMasterPlaylist === undefined) {\n      params.isMasterPlaylist = false;\n      return;\n    }\n    if (params.isMasterPlaylist) {\n      MIXEDTAGS();\n    }\n    return;\n  }\n  if (category === 'MasterPlaylist') {\n    if (params.isMasterPlaylist === undefined) {\n      params.isMasterPlaylist = true;\n      return;\n    }\n    if (params.isMasterPlaylist === false) {\n      MIXEDTAGS();\n    }\n  }\n  // category === 'Basic' or 'MediaorMasterPlaylist' or 'Unknown'\n}\n\nfunction parseTag(line, params) {\n  const [name, param] = splitTag(line);\n  const category = getTagCategory(name);\n  CHECKTAGCATEGORY(category, params);\n  if (category === 'Unknown') {\n    return null;\n  }\n  if (category === 'MediaPlaylist' && name !== 'EXT-X-RENDITION-REPORT' && name !== 'EXT-X-PREFETCH') {\n    if (params.hash[name]) {\n      utils.INVALIDPLAYLIST('There MUST NOT be more than one Media Playlist tag of each type in any Media Playlist');\n    }\n    params.hash[name] = true;\n  }\n  const [value, attributes] = parseTagParam(name, param);\n  return {name, category, value, attributes};\n}\n\nfunction lexicalParse(text, params) {\n  const lines = [];\n  for (const l of text.split('\\n')) {\n    // V8 has garbage collection issues when cleaning up substrings split from strings greater\n    // than 13 characters so before we continue we need to safely copy over each line so that it\n    // doesn't hold any reference to the containing string.\n    const line = Buffer.from(l.trim()).toString();\n    if (!line) {\n      // empty line\n      continue;\n    }\n    if (line.startsWith('#')) {\n      if (line.startsWith('#EXT')) {\n        // tag\n        const tag = parseTag(line, params);\n        if (tag) {\n          lines.push(tag);\n        }\n      }\n      // comment\n      continue;\n    }\n    // uri\n    lines.push(line);\n  }\n  if (lines.length === 0 || lines[0].name !== 'EXTM3U') {\n    utils.INVALIDPLAYLIST('The EXTM3U tag MUST be the first line.');\n  }\n  return lines;\n}\n\nfunction semanticParse(lines, params) {\n  let playlist;\n  if (params.isMasterPlaylist) {\n    playlist = parseMasterPlaylist(lines, params);\n  } else {\n    playlist = parseMediaPlaylist(lines, params);\n    if (!playlist.isIFrame && params.hasMap && params.compatibleVersion < 6) {\n      params.compatibleVersion = 6;\n    }\n  }\n  if (params.compatibleVersion > 1) {\n    if (!playlist.version || playlist.version < params.compatibleVersion) {\n      utils.INVALIDPLAYLIST(`EXT-X-VERSION needs to be ${params.compatibleVersion} or higher.`);\n    }\n  }\n  return playlist;\n}\n\nfunction parse(text) {\n  const params = {\n    version: undefined,\n    isMasterPlaylist: undefined,\n    hasMap: false,\n    targetDuration: 0,\n    compatibleVersion: 1,\n    isClosedCaptionsNone: false,\n    hash: {}\n  };\n\n  const lines = lexicalParse(text, params);\n  const playlist = semanticParse(lines, params);\n  playlist.source = text;\n  return playlist;\n}\n\nmodule.exports = parse;\n","const utils = require('./utils');\n\nconst ALLOW_REDUNDANCY = [\n  '#EXTINF',\n  '#EXT-X-BYTERANGE',\n  '#EXT-X-DISCONTINUITY',\n  '#EXT-X-STREAM-INF',\n  '#EXT-X-CUE-OUT',\n  '#EXT-X-CUE-IN',\n  '#EXT-X-KEY',\n  '#EXT-X-MAP'\n];\n\nconst SKIP_IF_REDUNDANT = [\n  '#EXT-X-MEDIA'\n];\n\nclass LineArray extends Array {\n  constructor(baseUri) {\n    super();\n    this.baseUri = baseUri;\n  }\n\n  // @override\n  push(...elems) {\n    // redundancy check\n    for (const elem of elems) {\n      if (!elem.startsWith('#')) {\n        super.push(elem);\n        continue;\n      }\n      if (ALLOW_REDUNDANCY.some(item => elem.startsWith(item))) {\n        super.push(elem);\n        continue;\n      }\n      if (this.includes(elem)) {\n        if (SKIP_IF_REDUNDANT.some(item => elem.startsWith(item))) {\n          continue;\n        }\n        utils.INVALIDPLAYLIST(`Redundant item (${elem})`);\n      }\n      super.push(elem);\n    }\n  }\n}\n\nfunction buildDecimalFloatingNumber(num, fixed) {\n  let roundFactor = 1000;\n  if (fixed) {\n    roundFactor = 10 ** fixed;\n  }\n  const rounded = Math.round(num * roundFactor) / roundFactor;\n  return fixed ? rounded.toFixed(fixed) : rounded;\n}\n\nfunction getNumberOfDecimalPlaces(num) {\n  const str = num.toString(10);\n  const index = str.indexOf('.');\n  if (index === -1) {\n    return 0;\n  }\n  return str.length - index - 1;\n}\n\nfunction buildMasterPlaylist(lines, playlist) {\n  for (const sessionData of playlist.sessionDataList) {\n    lines.push(buildSessionData(sessionData));\n  }\n  for (const sessionKey of playlist.sessionKeyList) {\n    lines.push(buildKey(sessionKey, true));\n  }\n  for (const variant of playlist.variants) {\n    buildVariant(lines, variant);\n  }\n}\n\nfunction buildSessionData(sessionData) {\n  const attrs = [`DATA-ID=\"${sessionData.id}\"`];\n  if (sessionData.language) {\n    attrs.push(`LANGUAGE=\"${sessionData.language}\"`);\n  }\n  if (sessionData.value) {\n    attrs.push(`VALUE=\"${sessionData.value}\"`);\n  } else if (sessionData.uri) {\n    attrs.push(`URI=\"${sessionData.uri}\"`);\n  }\n  return `#EXT-X-SESSION-DATA:${attrs.join(',')}`;\n}\n\nfunction buildKey(key, isSessionKey) {\n  const name = isSessionKey ? '#EXT-X-SESSION-KEY' : '#EXT-X-KEY';\n  const attrs = [`METHOD=${key.method}`];\n  if (key.uri) {\n    attrs.push(`URI=\"${key.uri}\"`);\n  }\n  if (key.iv) {\n    if (key.iv.length !== 16) {\n      utils.INVALIDPLAYLIST('IV must be a 128-bit unsigned integer');\n    }\n    attrs.push(`IV=${utils.byteSequenceToHex(key.iv)}`);\n  }\n  if (key.format) {\n    attrs.push(`KEYFORMAT=\"${key.format}\"`);\n  }\n  if (key.formatVersion) {\n    attrs.push(`KEYFORMATVERSIONS=\"${key.formatVersion}\"`);\n  }\n  return `${name}:${attrs.join(',')}`;\n}\n\nfunction buildVariant(lines, variant) {\n  const name = variant.isIFrameOnly ? '#EXT-X-I-FRAME-STREAM-INF' : '#EXT-X-STREAM-INF';\n  const attrs = [`BANDWIDTH=${variant.bandwidth}`];\n  if (variant.averageBandwidth) {\n    attrs.push(`AVERAGE-BANDWIDTH=${variant.averageBandwidth}`);\n  }\n  if (variant.isIFrameOnly) {\n    attrs.push(`URI=\"${variant.uri}\"`);\n  }\n  if (variant.codecs) {\n    attrs.push(`CODECS=\"${variant.codecs}\"`);\n  }\n  if (variant.resolution) {\n    attrs.push(`RESOLUTION=${variant.resolution.width}x${variant.resolution.height}`);\n  }\n  if (variant.frameRate) {\n    attrs.push(`FRAME-RATE=${buildDecimalFloatingNumber(variant.frameRate, 3)}`);\n  }\n  if (variant.hdcpLevel) {\n    attrs.push(`HDCP-LEVEL=${variant.hdcpLevel}`);\n  }\n  if (variant.audio.length > 0) {\n    attrs.push(`AUDIO=\"${variant.audio[0].groupId}\"`);\n    for (const rendition of variant.audio) {\n      lines.push(buildRendition(rendition));\n    }\n  }\n  if (variant.video.length > 0) {\n    attrs.push(`VIDEO=\"${variant.video[0].groupId}\"`);\n    for (const rendition of variant.video) {\n      lines.push(buildRendition(rendition));\n    }\n  }\n  if (variant.subtitles.length > 0) {\n    attrs.push(`SUBTITLES=\"${variant.subtitles[0].groupId}\"`);\n    for (const rendition of variant.subtitles) {\n      lines.push(buildRendition(rendition));\n    }\n  }\n  if (utils.getOptions().allowClosedCaptionsNone && variant.closedCaptions.length === 0) {\n    attrs.push(`CLOSED-CAPTIONS=NONE`);\n  } else if (variant.closedCaptions.length > 0) {\n    attrs.push(`CLOSED-CAPTIONS=\"${variant.closedCaptions[0].groupId}\"`);\n    for (const rendition of variant.closedCaptions) {\n      lines.push((buildRendition(rendition)));\n    }\n  }\n  if (variant.score) {\n    attrs.push(`SCORE=${variant.score}`);\n  }\n  if (variant.allowedCpc) {\n    const list = [];\n    for (const {format, cpcList} of variant.allowedCpc) {\n      list.push(`${format}:${cpcList.join('/')}`);\n    }\n    attrs.push(`ALLOWED-CPC=\"${list.join(',')}\"`);\n  }\n  if (variant.videoRange) {\n    attrs.push(`VIDEO-RANGE=${variant.videoRange}`);\n  }\n  if (variant.stableVariantId) {\n    attrs.push(`STABLE-VARIANT-ID=\"${variant.stableVariantId}\"`);\n  }\n  lines.push(`${name}:${attrs.join(',')}`);\n  if (!variant.isIFrameOnly) {\n    lines.push(`${variant.uri}`);\n  }\n}\n\nfunction buildRendition(rendition) {\n  const attrs = [\n    `TYPE=${rendition.type}`,\n    `GROUP-ID=\"${rendition.groupId}\"`,\n    `NAME=\"${rendition.name}\"`\n  ];\n  if (rendition.isDefault !== undefined) {\n    attrs.push(`DEFAULT=${rendition.isDefault ? 'YES' : 'NO'}`);\n  }\n  if (rendition.autoselect !== undefined) {\n    attrs.push(`AUTOSELECT=${rendition.autoselect ? 'YES' : 'NO'}`);\n  }\n  if (rendition.forced !== undefined) {\n    attrs.push(`FORCED=${rendition.forced ? 'YES' : 'NO'}`);\n  }\n  if (rendition.language) {\n    attrs.push(`LANGUAGE=\"${rendition.language}\"`);\n  }\n  if (rendition.assocLanguage) {\n    attrs.push(`ASSOC-LANGUAGE=\"${rendition.assocLanguage}\"`);\n  }\n  if (rendition.instreamId) {\n    attrs.push(`INSTREAM-ID=\"${rendition.instreamId}\"`);\n  }\n  if (rendition.characteristics) {\n    attrs.push(`CHARACTERISTICS=\"${rendition.characteristics}\"`);\n  }\n  if (rendition.channels) {\n    attrs.push(`CHANNELS=\"${rendition.channels}\"`);\n  }\n  if (rendition.uri) {\n    attrs.push(`URI=\"${rendition.uri}\"`);\n  }\n  return `#EXT-X-MEDIA:${attrs.join(',')}`;\n}\n\nfunction buildMediaPlaylist(lines, playlist) {\n  let lastKey = '';\n  let lastMap = '';\n  let unclosedCueIn = false;\n\n  if (playlist.targetDuration) {\n    lines.push(`#EXT-X-TARGETDURATION:${playlist.targetDuration}`);\n  }\n  if (playlist.lowLatencyCompatibility) {\n    const {canBlockReload, canSkipUntil, holdBack, partHoldBack} = playlist.lowLatencyCompatibility;\n    const params = [];\n    params.push(`CAN-BLOCK-RELOAD=${canBlockReload ? 'YES' : 'NO'}`);\n    if (canSkipUntil !== undefined) {\n      params.push(`CAN-SKIP-UNTIL=${canSkipUntil}`);\n    }\n    if (holdBack !== undefined) {\n      params.push(`HOLD-BACK=${holdBack}`);\n    }\n    if (partHoldBack !== undefined) {\n      params.push(`PART-HOLD-BACK=${partHoldBack}`);\n    }\n    lines.push(`#EXT-X-SERVER-CONTROL:${params.join(',')}`);\n  }\n  if (playlist.partTargetDuration) {\n    lines.push(`#EXT-X-PART-INF:PART-TARGET=${playlist.partTargetDuration}`);\n  }\n  if (playlist.mediaSequenceBase) {\n    lines.push(`#EXT-X-MEDIA-SEQUENCE:${playlist.mediaSequenceBase}`);\n  }\n  if (playlist.discontinuitySequenceBase) {\n    lines.push(`#EXT-X-DISCONTINUITY-SEQUENCE:${playlist.discontinuitySequenceBase}`);\n  }\n  if (playlist.playlistType) {\n    lines.push(`#EXT-X-PLAYLIST-TYPE:${playlist.playlistType}`);\n  }\n  if (playlist.isIFrame) {\n    lines.push(`#EXT-X-I-FRAMES-ONLY`);\n  }\n  if (playlist.skip > 0) {\n    lines.push(`#EXT-X-SKIP:SKIPPED-SEGMENTS=${playlist.skip}`);\n  }\n  for (const segment of playlist.segments) {\n    let markerType = '';\n    [lastKey, lastMap, markerType] = buildSegment(lines, segment, lastKey, lastMap, playlist.version);\n    if (markerType === 'OUT') {\n      unclosedCueIn = true;\n    } else if (markerType === 'IN' && unclosedCueIn) {\n      unclosedCueIn = false;\n    }\n  }\n  if (playlist.playlistType === 'VOD' && unclosedCueIn) {\n    lines.push('#EXT-X-CUE-IN');\n  }\n  if (playlist.prefetchSegments.length > 2) {\n    utils.INVALIDPLAYLIST('The server must deliver no more than two prefetch segments');\n  }\n  for (const segment of playlist.prefetchSegments) {\n    if (segment.discontinuity) {\n      lines.push(`#EXT-X-PREFETCH-DISCONTINUITY`);\n    }\n    lines.push(`#EXT-X-PREFETCH:${segment.uri}`);\n  }\n  if (playlist.endlist) {\n    lines.push(`#EXT-X-ENDLIST`);\n  }\n  for (const report of playlist.renditionReports) {\n    const params = [];\n    params.push(`URI=\"${report.uri}\"`, `LAST-MSN=${report.lastMSN}`);\n    if (report.lastPart !== undefined) {\n      params.push(`LAST-PART=${report.lastPart}`);\n    }\n    lines.push(`#EXT-X-RENDITION-REPORT:${params.join(',')}`);\n  }\n}\n\nfunction buildSegment(lines, segment, lastKey, lastMap, version = 1) {\n  let hint = false;\n  let markerType = '';\n\n  if (segment.discontinuity) {\n    lines.push(`#EXT-X-DISCONTINUITY`);\n  }\n  if (segment.key) {\n    const line = buildKey(segment.key);\n    if (line !== lastKey) {\n      lines.push(line);\n      lastKey = line;\n    }\n  }\n  if (segment.map) {\n    const line = buildMap(segment.map);\n    if (line !== lastMap) {\n      lines.push(line);\n      lastMap = line;\n    }\n  }\n  if (segment.programDateTime) {\n    lines.push(`#EXT-X-PROGRAM-DATE-TIME:${utils.formatDate(segment.programDateTime)}`);\n  }\n  if (segment.dateRange) {\n    lines.push(buildDateRange(segment.dateRange));\n  }\n  if (segment.markers.length > 0) {\n    markerType = buildMarkers(lines, segment.markers);\n  }\n  if (segment.parts.length > 0) {\n    hint = buildParts(lines, segment.parts);\n  }\n  if (hint) {\n    return [lastKey, lastMap];\n  }\n  const duration = version < 3 ? Math.round(segment.duration) : buildDecimalFloatingNumber(segment.duration, getNumberOfDecimalPlaces(segment.duration));\n  lines.push(`#EXTINF:${duration},${unescape(encodeURIComponent(segment.title || ''))}`);\n  if (segment.byterange) {\n    lines.push(`#EXT-X-BYTERANGE:${buildByteRange(segment.byterange)}`);\n  }\n  Array.prototype.push.call(lines, `${segment.uri}`); // URIs could be redundant when EXT-X-BYTERANGE is used\n  return [lastKey, lastMap, markerType];\n}\n\nfunction buildMap(map) {\n  const attrs = [`URI=\"${map.uri}\"`];\n  if (map.byterange) {\n    attrs.push(`BYTERANGE=\"${buildByteRange(map.byterange)}\"`);\n  }\n  return `#EXT-X-MAP:${attrs.join(',')}`;\n}\n\nfunction buildByteRange({offset, length}) {\n  return `${length}@${offset}`;\n}\n\nfunction buildDateRange(dateRange) {\n  const attrs = [\n    `ID=\"${dateRange.id}\"`\n  ];\n  if (dateRange.start) {\n    attrs.push(`START-DATE=\"${utils.formatDate(dateRange.start)}\"`);\n  }\n  if (dateRange.end) {\n    attrs.push(`END-DATE=\"${dateRange.end}\"`);\n  }\n  if (dateRange.duration) {\n    attrs.push(`DURATION=${dateRange.duration}`);\n  }\n  if (dateRange.plannedDuration) {\n    attrs.push(`PLANNED-DURATION=${dateRange.plannedDuration}`);\n  }\n  if (dateRange.classId) {\n    attrs.push(`CLASS=\"${dateRange.classId}\"`);\n  }\n  if (dateRange.endOnNext) {\n    attrs.push(`END-ON-NEXT=YES`);\n  }\n  for (const key of Object.keys(dateRange.attributes)) {\n    if (key.startsWith('X-')) {\n      if (typeof dateRange.attributes[key] === 'number') {\n        attrs.push(`${key}=${dateRange.attributes[key]}`);\n      } else {\n        attrs.push(`${key}=\"${dateRange.attributes[key]}\"`);\n      }\n    } else if (key.startsWith('SCTE35-')) {\n      attrs.push(`${key}=${utils.byteSequenceToHex(dateRange.attributes[key])}`);\n    }\n  }\n  return `#EXT-X-DATERANGE:${attrs.join(',')}`;\n}\n\nfunction buildMarkers(lines, markers) {\n  let type = '';\n  for (const marker of markers) {\n    if (marker.type === 'OUT') {\n      type = 'OUT';\n      lines.push(`#EXT-X-CUE-OUT:DURATION=${marker.duration}`);\n    } else if (marker.type === 'IN') {\n      type = 'IN';\n      lines.push('#EXT-X-CUE-IN');\n    } else if (marker.type === 'RAW') {\n      const value = marker.value ? `:${marker.value}` : '';\n      lines.push(`#${marker.tagName}${value}`);\n    }\n  }\n  return type;\n}\n\nfunction buildParts(lines, parts) {\n  let hint = false;\n  for (const part of parts) {\n    if (part.hint) {\n      const params = [];\n      params.push('TYPE=PART', `URI=\"${part.uri}\"`);\n      if (part.byterange) {\n        const {offset, length} = part.byterange;\n        params.push(`BYTERANGE-START=${offset}`);\n        if (length) {\n          params.push(`BYTERANGE-LENGTH=${length}`);\n        }\n      }\n      lines.push(`#EXT-X-PRELOAD-HINT:${params.join(',')}`);\n      hint = true;\n    } else {\n      const params = [];\n      params.push(`DURATION=${part.duration}`, `URI=\"${part.uri}\"`);\n      if (part.byterange) {\n        params.push(`BYTERANGE=${buildByteRange(part.byterange)}`);\n      }\n      if (part.independent) {\n        params.push('INDEPENDENT=YES');\n      }\n      if (part.gap) {\n        params.push('GAP=YES');\n      }\n      lines.push(`#EXT-X-PART:${params.join(',')}`);\n    }\n  }\n  return hint;\n}\n\nfunction stringify(playlist) {\n  utils.PARAMCHECK(playlist);\n  utils.ASSERT('Not a playlist', playlist.type === 'playlist');\n  const lines = new LineArray(playlist.uri);\n  lines.push('#EXTM3U');\n  if (playlist.version) {\n    lines.push(`#EXT-X-VERSION:${playlist.version}`);\n  }\n  if (playlist.independentSegments) {\n    lines.push('#EXT-X-INDEPENDENT-SEGMENTS');\n  }\n  if (playlist.start) {\n    lines.push(`#EXT-X-START:TIME-OFFSET=${buildDecimalFloatingNumber(playlist.start.offset)}${playlist.start.precise ? ',PRECISE=YES' : ''}`);\n  }\n  if (playlist.isMasterPlaylist) {\n    buildMasterPlaylist(lines, playlist);\n  } else {\n    buildMediaPlaylist(lines, playlist);\n  }\n  // console.log('<<<');\n  // console.log(lines.join('\\n'));\n  // console.log('>>>');\n  return lines.join('\\n');\n}\n\nmodule.exports = stringify;\n","const utils = require('./utils');\n\nclass Rendition {\n  constructor({\n    type, // required\n    uri, // required if type='SUBTITLES'\n    groupId, // required\n    language,\n    assocLanguage,\n    name, // required\n    isDefault,\n    autoselect,\n    forced,\n    instreamId, // required if type=CLOSED-CAPTIONS\n    characteristics,\n    channels\n  }) {\n    utils.PARAMCHECK(type, groupId, name);\n    utils.CONDITIONALASSERT([type === 'SUBTITLES', uri], [type === 'CLOSED-CAPTIONS', instreamId], [type === 'CLOSED-CAPTIONS', !uri], [forced, type === 'SUBTITLES']);\n    this.type = type;\n    this.uri = uri;\n    this.groupId = groupId;\n    this.language = language;\n    this.assocLanguage = assocLanguage;\n    this.name = name;\n    this.isDefault = isDefault;\n    this.autoselect = autoselect;\n    this.forced = forced;\n    this.instreamId = instreamId;\n    this.characteristics = characteristics;\n    this.channels = channels;\n  }\n}\n\nclass Variant {\n  constructor({\n    uri, // required\n    isIFrameOnly = false,\n    bandwidth, // required\n    averageBandwidth,\n    score,\n    codecs, // required?\n    resolution,\n    frameRate,\n    hdcpLevel,\n    allowedCpc,\n    videoRange,\n    stableVariantId,\n    audio = [],\n    video = [],\n    subtitles = [],\n    closedCaptions = [],\n    currentRenditions = {audio: 0, video: 0, subtitles: 0, closedCaptions: 0}\n  }) {\n    // utils.PARAMCHECK(uri, bandwidth, codecs);\n    utils.PARAMCHECK(uri, bandwidth); // the spec states that CODECS is required but not true in the real world\n    this.uri = uri;\n    this.isIFrameOnly = isIFrameOnly;\n    this.bandwidth = bandwidth;\n    this.averageBandwidth = averageBandwidth;\n    this.score = score;\n    this.codecs = codecs;\n    this.resolution = resolution;\n    this.frameRate = frameRate;\n    this.hdcpLevel = hdcpLevel;\n    this.allowedCpc = allowedCpc;\n    this.videoRange = videoRange;\n    this.stableVariantId = stableVariantId;\n    this.audio = audio;\n    this.video = video;\n    this.subtitles = subtitles;\n    this.closedCaptions = closedCaptions;\n    this.currentRenditions = currentRenditions;\n  }\n}\n\nclass SessionData {\n  constructor({\n    id, // required\n    value,\n    uri,\n    language\n  }) {\n    utils.PARAMCHECK(id, value || uri);\n    utils.ASSERT('SessionData cannot have both value and uri, shoud be either.', !(value && uri));\n    this.id = id;\n    this.value = value;\n    this.uri = uri;\n    this.language = language;\n  }\n}\n\nclass Key {\n  constructor({\n    method, // required\n    uri, // required unless method=NONE\n    iv,\n    format,\n    formatVersion\n  }) {\n    utils.PARAMCHECK(method);\n    utils.CONDITIONALPARAMCHECK([method !== 'NONE', uri]);\n    utils.CONDITIONALASSERT([method === 'NONE', !(uri || iv || format || formatVersion)]);\n    this.method = method;\n    this.uri = uri;\n    this.iv = iv;\n    this.format = format;\n    this.formatVersion = formatVersion;\n  }\n}\n\nclass MediaInitializationSection {\n  constructor({\n    hint = false,\n    uri, // required\n    mimeType,\n    byterange\n  }) {\n    utils.PARAMCHECK(uri);\n    this.hint = hint;\n    this.uri = uri;\n    this.mimeType = mimeType;\n    this.byterange = byterange;\n  }\n}\n\nclass DateRange {\n  constructor({\n    id, // required\n    classId, // required if endOnNext is true\n    start,\n    end,\n    duration,\n    plannedDuration,\n    endOnNext,\n    attributes = {}\n  }) {\n    utils.PARAMCHECK(id);\n    utils.CONDITIONALPARAMCHECK([endOnNext === true, classId]);\n    utils.CONDITIONALASSERT([end, start], [end, start <= end], [duration, duration >= 0], [plannedDuration, plannedDuration >= 0]);\n    this.id = id;\n    this.classId = classId;\n    this.start = start;\n    this.end = end;\n    this.duration = duration;\n    this.plannedDuration = plannedDuration;\n    this.endOnNext = endOnNext;\n    this.attributes = attributes;\n  }\n}\n\nclass SpliceInfo {\n  constructor({\n    type, // required\n    duration, // required if the type is 'OUT'\n    tagName, // required if the type is 'RAW'\n    value\n  }) {\n    utils.PARAMCHECK(type);\n    utils.CONDITIONALPARAMCHECK([type === 'OUT', duration]);\n    utils.CONDITIONALPARAMCHECK([type === 'RAW', tagName]);\n    this.type = type;\n    this.duration = duration;\n    this.tagName = tagName;\n    this.value = value;\n  }\n}\n\nclass Data {\n  constructor(type) {\n    utils.PARAMCHECK(type);\n    this.type = type;\n  }\n}\n\nclass Playlist extends Data {\n  constructor({\n    isMasterPlaylist, // required\n    uri,\n    version,\n    independentSegments = false,\n    start,\n    source\n  }) {\n    super('playlist');\n    utils.PARAMCHECK(isMasterPlaylist);\n    this.isMasterPlaylist = isMasterPlaylist;\n    this.uri = uri;\n    this.version = version;\n    this.independentSegments = independentSegments;\n    this.start = start;\n    this.source = source;\n  }\n}\n\nclass MasterPlaylist extends Playlist {\n  constructor(params = {}) {\n    params.isMasterPlaylist = true;\n    super(params);\n    const {\n      variants = [],\n      currentVariant,\n      sessionDataList = [],\n      sessionKeyList = []\n    } = params;\n    this.variants = variants;\n    this.currentVariant = currentVariant;\n    this.sessionDataList = sessionDataList;\n    this.sessionKeyList = sessionKeyList;\n  }\n}\n\nclass MediaPlaylist extends Playlist {\n  constructor(params = {}) {\n    params.isMasterPlaylist = false;\n    super(params);\n    const {\n      targetDuration,\n      mediaSequenceBase = 0,\n      discontinuitySequenceBase = 0,\n      endlist = false,\n      playlistType,\n      isIFrame,\n      segments = [],\n      prefetchSegments = [],\n      lowLatencyCompatibility,\n      partTargetDuration,\n      renditionReports = [],\n      skip = 0,\n      hash\n    } = params;\n    this.targetDuration = targetDuration;\n    this.mediaSequenceBase = mediaSequenceBase;\n    this.discontinuitySequenceBase = discontinuitySequenceBase;\n    this.endlist = endlist;\n    this.playlistType = playlistType;\n    this.isIFrame = isIFrame;\n    this.segments = segments;\n    this.prefetchSegments = prefetchSegments;\n    this.lowLatencyCompatibility = lowLatencyCompatibility;\n    this.partTargetDuration = partTargetDuration;\n    this.renditionReports = renditionReports;\n    this.skip = skip;\n    this.hash = hash;\n  }\n}\n\nclass Segment extends Data {\n  constructor({\n    uri,\n    mimeType,\n    data,\n    duration,\n    title,\n    byterange,\n    discontinuity,\n    mediaSequenceNumber = 0,\n    discontinuitySequence = 0,\n    key,\n    map,\n    programDateTime,\n    dateRange,\n    markers = [],\n    parts = []\n  }) {\n    super('segment');\n    // utils.PARAMCHECK(uri, mediaSequenceNumber, discontinuitySequence);\n    this.uri = uri;\n    this.mimeType = mimeType;\n    this.data = data;\n    this.duration = duration;\n    this.title = title;\n    this.byterange = byterange;\n    this.discontinuity = discontinuity;\n    this.mediaSequenceNumber = mediaSequenceNumber;\n    this.discontinuitySequence = discontinuitySequence;\n    this.key = key;\n    this.map = map;\n    this.programDateTime = programDateTime;\n    this.dateRange = dateRange;\n    this.markers = markers;\n    this.parts = parts;\n  }\n}\n\nclass PartialSegment extends Data {\n  constructor({\n    hint = false,\n    uri, // required\n    duration,\n    independent,\n    byterange,\n    gap\n  }) {\n    super('part');\n    utils.PARAMCHECK(uri);\n    this.hint = hint;\n    this.uri = uri;\n    this.duration = duration;\n    this.independent = independent;\n    this.duration = duration;\n    this.byterange = byterange;\n    this.gap = gap;\n  }\n}\n\nclass PrefetchSegment extends Data {\n  constructor({\n    uri, // required\n    discontinuity,\n    mediaSequenceNumber = 0,\n    discontinuitySequence = 0,\n    key\n  }) {\n    super('prefetch');\n    utils.PARAMCHECK(uri);\n    this.uri = uri;\n    this.discontinuity = discontinuity;\n    this.mediaSequenceNumber = mediaSequenceNumber;\n    this.discontinuitySequence = discontinuitySequence;\n    this.key = key;\n  }\n}\n\nclass RenditionReport {\n  constructor({\n    uri, // required\n    lastMSN,\n    lastPart\n  }) {\n    utils.PARAMCHECK(uri);\n    this.uri = uri;\n    this.lastMSN = lastMSN;\n    this.lastPart = lastPart;\n  }\n}\n\nmodule.exports = {\n  Rendition,\n  Variant,\n  SessionData,\n  Key,\n  MediaInitializationSection,\n  DateRange,\n  SpliceInfo,\n  Playlist,\n  MasterPlaylist,\n  MediaPlaylist,\n  Segment,\n  PartialSegment,\n  PrefetchSegment,\n  RenditionReport\n};\n","let options = {};\n\nfunction THROW(err) {\n  if (!options.strictMode) {\n    if (!options.silent) {\n      console.error(err.message);\n    }\n    return;\n  }\n  throw err;\n}\n\nfunction ASSERT(msg, ...options) {\n  for (const [index, param] of options.entries()) {\n    if (!param) {\n      THROW(new Error(`${msg} : Failed at [${index}]`));\n    }\n  }\n}\n\nfunction CONDITIONALASSERT(...options) {\n  for (const [index, [cond, param]] of options.entries()) {\n    if (!cond) {\n      continue;\n    }\n    if (!param) {\n      THROW(new Error(`Conditional Assert : Failed at [${index}]`));\n    }\n  }\n}\n\nfunction PARAMCHECK(...options) {\n  for (const [index, param] of options.entries()) {\n    if (param === undefined) {\n      THROW(new Error(`Param Check : Failed at [${index}]`));\n    }\n  }\n}\n\nfunction CONDITIONALPARAMCHECK(...options) {\n  for (const [index, [cond, param]] of options.entries()) {\n    if (!cond) {\n      continue;\n    }\n    if (param === undefined) {\n      THROW(new Error(`Conditional Param Check : Failed at [${index}]`));\n    }\n  }\n}\n\nfunction INVALIDPLAYLIST(msg) {\n  THROW(new Error(`Invalid Playlist : ${msg}`));\n}\n\nfunction toNumber(str, radix = 10) {\n  if (typeof str === 'number') {\n    return str;\n  }\n  const num = radix === 10 ? Number.parseFloat(str, radix) : Number.parseInt(str, radix);\n  if (Number.isNaN(num)) {\n    return 0;\n  }\n  return num;\n}\n\nfunction hexToByteSequence(str) {\n  if (str.startsWith('0x') || str.startsWith('0X')) {\n    str = str.slice(2);\n  }\n  const numArray = [];\n  for (let i = 0; i < str.length; i += 2) {\n    numArray.push(toNumber(str.slice(i, i + 2), 16));\n  }\n  return Buffer.from(numArray);\n}\n\nfunction byteSequenceToHex(sequence, start = 0, end = sequence.length) {\n  if (end <= start) {\n    THROW(new Error(`end must be larger than start : start=${start}, end=${end}`));\n  }\n  const array = [];\n  for (let i = start; i < end; i++) {\n    array.push(`0${(sequence[i] & 0xFF).toString(16).toUpperCase()}`.slice(-2));\n  }\n  return `0x${array.join('')}`;\n}\n\nfunction tryCatch(body, errorHandler) {\n  try {\n    return body();\n  } catch (err) {\n    return errorHandler(err);\n  }\n}\n\nfunction splitAt(str, delimiter, index = 0) {\n  let lastDelimiterPos = -1;\n  for (let i = 0, j = 0; i < str.length; i++) {\n    if (str[i] === delimiter) {\n      if (j++ === index) {\n        return [str.slice(0, i), str.slice(i + 1)];\n      }\n      lastDelimiterPos = i;\n    }\n  }\n  if (lastDelimiterPos !== -1) {\n    return [str.slice(0, lastDelimiterPos), str.slice(lastDelimiterPos + 1)];\n  }\n  return [str];\n}\n\nfunction trim(str, char = ' ') {\n  if (!str) {\n    return str;\n  }\n  str = str.trim();\n  if (char === ' ') {\n    return str;\n  }\n  if (str.startsWith(char)) {\n    str = str.slice(1);\n  }\n  if (str.endsWith(char)) {\n    str = str.slice(0, -1);\n  }\n  return str;\n}\n\nfunction splitByCommaWithPreservingQuotes(str) {\n  const list = [];\n  let doParse = true;\n  let start = 0;\n  const prevQuotes = [];\n  for (let i = 0; i < str.length; i++) {\n    const curr = str[i];\n    if (doParse && curr === ',') {\n      list.push(str.slice(start, i).trim());\n      start = i + 1;\n      continue;\n    }\n    if (curr === '\"' || curr === '\\'') {\n      if (doParse) {\n        prevQuotes.push(curr);\n        doParse = false;\n      } else if (curr === prevQuotes[prevQuotes.length - 1]) {\n        prevQuotes.pop();\n        doParse = true;\n      } else {\n        prevQuotes.push(curr);\n      }\n    }\n  }\n  list.push(str.slice(start).trim());\n  return list;\n}\n\nfunction camelify(str) {\n  const array = [];\n  let nextUpper = false;\n  for (const ch of str) {\n    if (ch === '-' || ch === '_') {\n      nextUpper = true;\n      continue;\n    }\n    if (nextUpper) {\n      array.push(ch.toUpperCase());\n      nextUpper = false;\n      continue;\n    }\n    array.push(ch.toLowerCase());\n  }\n  return array.join('');\n}\n\nfunction formatDate(date) {\n  const YYYY = date.getUTCFullYear();\n  const MM = ('0' + (date.getUTCMonth() + 1)).slice(-2);\n  const DD = ('0' + date.getUTCDate()).slice(-2);\n  const hh = ('0' + date.getUTCHours()).slice(-2);\n  const mm = ('0' + date.getUTCMinutes()).slice(-2);\n  const ss = ('0' + date.getUTCSeconds()).slice(-2);\n  const msc = ('00' + date.getUTCMilliseconds()).slice(-3);\n  return `${YYYY}-${MM}-${DD}T${hh}:${mm}:${ss}.${msc}Z`;\n}\n\nfunction hasOwnProp(obj, propName) {\n  return Object.hasOwnProperty.call(obj, propName);\n}\n\nfunction setOptions(newOptions = {}) {\n  options = Object.assign(options, newOptions);\n}\n\nfunction getOptions() {\n  return Object.assign({}, options);\n}\n\nmodule.exports = {\n  THROW,\n  ASSERT,\n  CONDITIONALASSERT,\n  PARAMCHECK,\n  CONDITIONALPARAMCHECK,\n  INVALIDPLAYLIST,\n  toNumber,\n  hexToByteSequence,\n  byteSequenceToHex,\n  tryCatch,\n  splitAt,\n  trim,\n  splitByCommaWithPreservingQuotes,\n  camelify,\n  formatDate,\n  hasOwnProp,\n  setOptions,\n  getOptions\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(851);\n"],"sourceRoot":""}